module.exports.rgbParser = {
    pathMap: {"rgb.rgbPercentage":1,"rgb.rgbPercentage.red":2,"rgb.rgbPercentage.green":3,"rgb.rgbPercentage.blue":4,"rgb.rgbPercentage.alpha":5,"rgb.rgbPercentage.alpha.number":6,"rgb.rgbPercentage.alpha.percentage":7,"rgb.rgbNumber":8,"rgb.rgbNumber.red":9,"rgb.rgbNumber.green":10,"rgb.rgbNumber.blue":11,"rgb.rgbNumber.alpha":12,"rgb.rgbNumber.alpha.number":13,"rgb.rgbNumber.alpha.percentage":14,"rgb.rgbPercentageCommas":15,"rgb.rgbPercentageCommas.red":16,"rgb.rgbPercentageCommas.green":17,"rgb.rgbPercentageCommas.blue":18,"rgb.rgbPercentageCommas.alpha":19,"rgb.rgbPercentageCommas.alpha.number":20,"rgb.rgbPercentageCommas.alpha.percentage":21,"rgb.rgbNumberCommas":22,"rgb.rgbNumberCommas.red":23,"rgb.rgbNumberCommas.green":24,"rgb.rgbNumberCommas.blue":25,"rgb.rgbNumberCommas.alpha":26,"rgb.rgbNumberCommas.alpha.number":27,"rgb.rgbNumberCommas.alpha.percentage":28},
    regex: /^(?:((?:rgba?\((?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?))|((?:rgba?\((?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%)))))?(?:\s*)\)?))|((?:rgba?\((?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*),(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*),(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)(?:,(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?))|((?:rgba?\((?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*),(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*),(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)(?:,(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?)))$/i,
    fastRegex: /^(?:((?:rgba?\((?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?))|((?:rgba?\((?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%)))))?(?:\s*)\)?))|((?:rgba?\((?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*),(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*),(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)(?:,(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?))|((?:rgba?\((?:\s*)((?:\d+(?:\.\d+)?))(?:\s*),(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*),(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)(?:,(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?)))$/i
};

module.exports.hslParser = {
    pathMap: {"hsl.hslCommas":1,"hsl.hslCommas.hue":2,"hsl.hslCommas.hue.angle":3,"hsl.hslCommas.hue.angle.value":4,"hsl.hslCommas.hue.angle.unit":5,"hsl.hslCommas.hue.number":6,"hsl.hslCommas.saturation":7,"hsl.hslCommas.lightness":8,"hsl.hslCommas.alpha":9,"hsl.hslCommas.alpha.number":10,"hsl.hslCommas.alpha.percentage":11,"hsl.hslNoCommas":12,"hsl.hslNoCommas.hue":13,"hsl.hslNoCommas.hue.angle":14,"hsl.hslNoCommas.hue.angle.value":15,"hsl.hslNoCommas.hue.angle.unit":16,"hsl.hslNoCommas.hue.number":17,"hsl.hslNoCommas.saturation":18,"hsl.hslNoCommas.lightness":19,"hsl.hslNoCommas.alpha":20,"hsl.hslNoCommas.alpha.number":21,"hsl.hslNoCommas.alpha.percentage":22},
    regex: /^(?:((?:hsla?\((?:\s*)((?:((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(deg|g?rad|turn)))|((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))))(?:\s*),(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*),(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)(?:,(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?))|((?:hsla?\((?:\s*)((?:((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(deg|g?rad|turn)))|((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))))(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?)))$/i,
    fastRegex: /^(?:((?:hsla?\((?:\s*)((?:((?:((?:\d+(?:\.\d+)?))(deg|g?rad|turn)))|((?:\d+(?:\.\d+)?))))(?:\s*),(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*),(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)(?:,(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?))|((?:hsla?\((?:\s*)((?:((?:((?:\d+(?:\.\d+)?))(deg|g?rad|turn)))|((?:\d+(?:\.\d+)?))))(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?)))$/i
};

module.exports.hwbParser = {
    pathMap: {"hwb.hue":1,"hwb.hue.angle":2,"hwb.hue.angle.value":3,"hwb.hue.angle.unit":4,"hwb.hue.number":5,"hwb.whiteness":6,"hwb.blackness":7,"hwb.alpha":8,"hwb.alpha.number":9,"hwb.alpha.percentage":10},
    regex: /^(?:hwb\((?:\s*)((?:((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(deg|g?rad|turn)))|((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))))(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?)$/i,
    fastRegex: /^(?:hwb\((?:\s*)((?:((?:((?:\d+(?:\.\d+)?))(deg|g?rad|turn)))|((?:\d+(?:\.\d+)?))))(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?)$/i
};

module.exports.labParser = {
    pathMap: {"lab.lightness":1,"lab.a":2,"lab.b":3,"lab.alpha":4,"lab.alpha.number":5,"lab.alpha.percentage":6},
    regex: /^(?:lab\((?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?)$/i,
    fastRegex: /^(?:lab\((?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?)$/i
};

module.exports.lchParser = {
    pathMap: {"lch.lightness":1,"lch.chroma":2,"lch.hue":3,"lch.hue.angle":4,"lch.hue.angle.value":5,"lch.hue.angle.unit":6,"lch.hue.number":7,"lch.alpha":8,"lch.alpha.number":9,"lch.alpha.percentage":10},
    regex: /^(?:lch\((?:\s*)((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))(?:\s*)((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(?:\s*)((?:((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))(deg|g?rad|turn)))|((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*))?\)?)$/i,
    fastRegex: /^(?:lch\((?:\s*)((?:(?:\d+(?:\.\d+)?)%))(?:\s*)((?:\d+(?:\.\d+)?))(?:\s*)((?:((?:((?:\d+(?:\.\d+)?))(deg|g?rad|turn)))|((?:\d+(?:\.\d+)?))))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*))?\)?)$/i
};

module.exports.deviceCmykParser = {
    pathMap: {"deviceCmyk.c":1,"deviceCmyk.c.number":2,"deviceCmyk.c.percentage":3,"deviceCmyk.m":4,"deviceCmyk.m.number":5,"deviceCmyk.m.percentage":6,"deviceCmyk.y":7,"deviceCmyk.y.number":8,"deviceCmyk.y.percentage":9,"deviceCmyk.k":10,"deviceCmyk.k.number":11,"deviceCmyk.k.percentage":12,"deviceCmyk.alpha":13,"deviceCmyk.alpha.number":14,"deviceCmyk.alpha.percentage":15,"deviceCmyk.fallback":16},
    regex: /^(?:device-cmyk\((?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%))))(?:\s*)(?:\/(?:\s*)((?:((?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?))|((?:(?:[+-]?(?:\d*\.\d+|\d+)(?:[eE][+-]\d+)?)%)))(?:(?:\s*),(?:\s*)(.+?))?)(?:\s*))?\)?)$/i,
    fastRegex: /^(?:device-cmyk\((?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%))))(?:\s*)(?:\/(?:\s*)((?:((?:\d+(?:\.\d+)?))|((?:(?:\d+(?:\.\d+)?)%)))(?:(?:\s*),(?:\s*)(.+?))?)(?:\s*))?\)?)$/i
};
